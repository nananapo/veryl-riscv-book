= M-modeの実装 (1. CSRの実装)

== 概要

「第II部 RV64IMACの実装」では、RV64IMACと例外、MMIOを実装しました。
「第III部 特権/割り込みの実装」次のような機能を実装します。

 * 特権 (M-mode、S-mode、U-mode)
 * 仮想記憶システム(ページング)
 * 割り込み(CLINT、PLIC)

=== 特権レベルとは何か？

CPUで動くアプリケーションは様々ですが、
多くのアプリケーションはOS(Operating System、オペレーティングシステム)の上で動くように作成されています。
「OSの上で動く」とは、アプリケーションはOSの機能を使い、OSに管理されながら実行されるということです。

多くのOSはデバイスやメモリなどのリソースの管理を行い、アプリケーションに対して簡単にそれを扱うためのインターフェースを提供します。
また、アプリケーションのデータを別のアプリケーションから保護したり、OSが提供する方法でしかデバイスにアクセスできなくするセキュリティ機能も備えています。

セキュリティ機能を実現するためには、OSがアプリケーションを実行するときにCPUが提供する一部の機能を制限する機能が必要です。
RISC-Vでは、この機能を特権レベル(privilege level)によって提供しています。
ほとんどの特権レベルの機能はCSRを通じて提供されます。

特権レベルは次の3種類@<fn>{virtualization}が用意されています(TODO table)。
それぞれの特権レベルは2ビットの数値で表すことができます。

TODO table

//footnote[virtualization][V拡張が実装されている場合、さらに仮想化のためのレベルが追加されます。]

高い特権レベルには低い特権レベルの機能を制限する機能があったり、高い特権レベルでしか利用できない機能が定義されています。

=== 特権レベルの実装順序

RISC-VのCPUに特権レベルを実装するとき、TODOテーブルのいずれかの構成にする必要があります。
特権レベルを実装していないときはM-modeのみになります。

TODO M, MU, MSUテーブル

本章ではM-mode向けのCSRの一部を実装します。
実装する機能、レジスタと章の対応は表TODOの通りです

table 実装する機能とレジスタと章の対応

== CSRのアドレスの追加

== misaレジスタ

== mimpidレジスタ

== mhartidレジスタ

== mstatusレジスタ

== mcycleレジスタ

== minstretレジスタ

== mscratchレジスタ

