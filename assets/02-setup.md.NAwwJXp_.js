import{_ as e,c as l,o as s,af as r,ag as t}from"./chunks/framework.D5l_65jD.js";const m=JSON.parse('{"title":"環境構築","description":"","frontmatter":{},"headers":[],"relativePath":"02-setup.md","filePath":"02-setup.md"}'),n={name:"02-setup.md"};function o(p,a,i,c,h,d){return s(),l("div",null,[...a[0]||(a[0]=[r(`<h1 id="環境構築" tabindex="-1">環境構築 <a class="header-anchor" href="#環境構築" aria-label="Permalink to “環境構築”">​</a></h1><p>本書で使用するソフトウェアをインストールします。 WSLが使えるWindows、Mac、Linuxのいずれかの環境を用意してください。</p><h2 id="veryl" tabindex="-1">Veryl <a class="header-anchor" href="#veryl" aria-label="Permalink to “Veryl”">​</a></h2><h3 id="verylのインストール" tabindex="-1">Verylのインストール <a class="header-anchor" href="#verylのインストール" aria-label="Permalink to “Verylのインストール”">​</a></h3><p>本書ではVerylという言語でCPUを記述します。 まず、Verylのトランスパイラをインストールします。 Verylには、Verylupというインストーラが用意されており、 これを利用することでVerylをインストールできます。</p><p>VerylupはGitHubのReleaseページから入手できます。 <a href="https://github.com/veryl-lang/verylup" target="_blank" rel="noreferrer">veryl-lang/verylup</a> で入手方法を確認してください<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。 Verylupを入手したら、 次のようにVerylの最新版をインストールします (リスト1)。</p><p><span class="caption">▼リスト1.1: Verylのインストール</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">verylup setup</span>
[INFO ]  downloading toolchain: latest
[INFO ]   installing toolchain: latest
[INFO ]     creating hardlink: veryl
[INFO ]     creating hardlink: veryl-ls
</code></pre></div><h4 id="verylの更新" tabindex="-1">Verylの更新 <a class="header-anchor" href="#verylの更新" aria-label="Permalink to “Verylの更新”">​</a></h4><p>最新のVerylに更新するには、次のようなコマンドを実行します (リスト2)。</p><p><span class="caption">▼リスト1.2: Verylの更新</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">verylup update</span>
</code></pre></div><h4 id="インストールするバージョンの指定" tabindex="-1">インストールするバージョンの指定 <a class="header-anchor" href="#インストールするバージョンの指定" aria-label="Permalink to “インストールするバージョンの指定”">​</a></h4><p>特定のバージョンのVerylをインストールするには、 次のようなコマンドを実行します (リスト3)。</p><p><span class="caption">▼リスト1.3: Verylのバージョン0.13.1をインストールする</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">verylup install 0.13.1</span>
</code></pre></div><p>インストールされているバージョン一覧は次のように確認できます (リスト4)。</p><p><span class="caption">▼リスト1.4: インストール済みのVerylのバージョン一覧を表示する</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">verylup show</span>
installed toolchains
--------------------
0.13.1
0.13.2
latest (default)
</code></pre></div><h4 id="使用するバージョンの指定" tabindex="-1">使用するバージョンの指定 <a class="header-anchor" href="#使用するバージョンの指定" aria-label="Permalink to “使用するバージョンの指定”">​</a></h4><p>バージョンを指定しない場合は、 最新版のVerylが使用されます (リスト5)。</p><p><span class="caption">▼リスト1.5: verylのバージョン確認</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">veryl --version</span>
veryl 0.13.2
</code></pre></div><p>特定のバージョンのVerylを使用するには<code>+</code>でバージョンを指定します (リスト6)。</p><p><span class="caption">▼リスト1.6: Verylのバージョン0.13.2を使用する</span></p><div class="language-terminal"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="hljs"><code><span class="hljs-meta prompt_">$ </span><span class="language-bash">veryl +0.13.2 ← +でバージョンを指定する</span>
</code></pre></div><h3 id="エディタ拡張のインストール" tabindex="-1">エディタ拡張のインストール <a class="header-anchor" href="#エディタ拡張のインストール" aria-label="Permalink to “エディタ拡張のインストール”">​</a></h3><p><img src="`+t+'" alt="VerylのVSCode拡張"> エディタにVSCodeを利用している方は、 図1の拡張をインストールするとシンタックスハイライトなどの機能を利用できます。</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=dalance.vscode-veryl" target="_blank" rel="noreferrer">https://marketplace.visualstudio.com/items?itemName=dalance.vscode-veryl</a></li></ul><p>エディタにVimを利用している方は、 GitHubの<a href="https://github.com/veryl-lang/veryl.vim" target="_blank" rel="noreferrer">veryl-lang/veryl.vim</a> でプラグインを入手できます。</p><h2 id="verilator" tabindex="-1">Verilator <a class="header-anchor" href="#verilator" aria-label="Permalink to “Verilator”">​</a></h2><p><a href="https://github.com/verilator/verilator" target="_blank" rel="noreferrer">Verilator</a>は、 SystemVerilogのシミュレータを生成するためのソフトウェアです。</p><p>パッケージマネージャ(apt、Homebrewなど)を利用してインストールできます。 パッケージマネージャが入っていない場合は、 <a href="https://verilator.org/guide/latest/install.html" target="_blank" rel="noreferrer">ドキュメント</a> を参考にインストールしてください。</p><div class="warning custom-block"><p class="custom-block-title"><b>本書で利用するVerilatorのバージョン</b></p><p>2024/10/28時点の最新バージョンはv5.030ですが、 Verilatorの問題によりシミュレータをビルドできない場合があります。 対処方法はサポートページを確認してください。</p></div><h2 id="riscv-gnu-toolchain" tabindex="-1">riscv-gnu-toolchain <a class="header-anchor" href="#riscv-gnu-toolchain" aria-label="Permalink to “riscv-gnu-toolchain”">​</a></h2><p>riscv-gnu-toolchainは、RISC-V向けのコンパイラやシミュレータなどが含まれているツールチェーン(ソフトウェア群)です。</p><p>GitHubの<a href="https://github.com/riscv-collab/riscv-gnu-toolchain" target="_blank" rel="noreferrer">riscv-collab/riscv-gnu-toolchain</a> のREADMEにインストール方法が書かれています。 READMEの<code>Installation (Newlib)</code>を参考にインストールしてください。</p><div class="info custom-block"><p class="custom-block-title"><b>FPGAを利用する方へ</b></p><p>GOWINのFPGAを利用する人はGOWIN EDA、 PYNQ-Z1を利用する人はVivadoのインストールが必要です。</p></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>cargoが入っている方は、<code>cargo install verylup</code>でもインストールできます。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>',40)])])}const v=e(n,[["render",o]]);export{m as __pageData,v as default};
