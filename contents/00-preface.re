= まえがき / はじめに

本書を手に取っていただき、ありがとうございます。

本書は、ハードウェア記述言語VerylでRISC-VのCPUを書く方法について解説した本です。
この本を読めば、CPUを作れます。

====[notoc] 本書の目的

本書の目的は、XXXの基礎的な使い方を身につけることです。
具体的には、XXXを使ってXXXやXXXやXXXができるようになることです。

ただし、XXXやXXXといった内容は、本書では扱いません。


====[notoc] 本書の対象読者

本書では次のような人を対象としています。

 * CPUを書いてみたい人
 * Verylを聞いたことはあるが触っていなかった人

====[notoc] 前提とする知識

本書を読むにあたり、次のような知識が必要となります。

 * 何らかのプログラミング言語の基礎知識
 * いろいろ

====[notoc] 問い合わせ先

本書に関する質問やお問い合わせは、次のページまでお願いします。
正誤表とサンプルコードもここにあります。

 * URL: @<href>{https://www.example.com/mybook/}


====[notoc] 謝辞

本書はXXXX氏とXXXX氏にレビューしていただきました。
この場を借りて感謝します。ありがとうございました。



//clearpage

==[notoc] 凡例

本書では、プログラムコードを次のように表示します。太字は強調を表します。

//list[][]{
print("Hello, @<b>|world|!\n");       @<balloon>{太字は強調}
//}

プログラムコードの差分を表示する場合は、追加されたコードを太字で、削除されたコードを取り消し線で表します。

//list[][]{
@<del>|print("Hello, @<b>|world|!\n");|       @<balloon>{取り消し線は削除したコード}
@<b>|print("Hello, "+name+"!\n");|    @<balloon>{太字は追加したコード}
//}

長い行が右端で折り返されると、折り返されたことを表す小さな記号がつきます。

//list[][]{
123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_
//}

ターミナル画面は、次のように表示します。
行頭の「@<code>|$ |」はプロンプトを表し、ユーザが入力するコマンドには薄い下線を引いています。

//terminal{
$ @<userinput>|echo Hello|       @<balloon>{行頭の「$ 」はプロンプト、それ以降がユーザ入力}
//}

本文に対する補足情報や注意・警告は、次のようなノートや囲み枠で表示します。

//note[ノートタイトル]{
ノートは本文に対する補足情報です。
//}

//info[タイトル]{
本文に対する補足情報です。
//}

//caution[タイトル]{
本文に対する注意・警告です。
//}
